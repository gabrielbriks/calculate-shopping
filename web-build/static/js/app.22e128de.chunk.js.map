{"version":3,"sources":["src/pages/AllLists.tsx","src/pages/Main.tsx","src/routes.tsx","App.tsx"],"names":["AllLists","View","style","flex","Text","fontSize","textAlign","fontWeight","styles","StyleSheet","create","container","marginTop","StatusBar","currentHeight","marginHorizontal","scrolview","viewListItens","flexDirection","alignContent","alignItems","text","marginBottom","textName","textTotal","viewAddItem","viewTotalItems","inputAddItem","backgroundColor","borderColor","margin","padding","borderWidth","borderRadius","height","inputsItems","headerList","viewHeaderListItens","Main","useState","items","setItems","nameItem","setNameItem","total","setTotal","setQuantityItem","setValorItem","UpdateValueItem","key","quantityItem","valueItem","_total","_item","find","index","id","_indexItem","findIndex","quatity","valor","subtotal","forEach","item","console","log","name","totalItems","reduce","a","b","SafeAreaView","FlatList","contentContainerStyle","data","keyExtractor","extraData","renderItem","TextInput","width","defaultValue","toString","onChangeText","Number","parseInt","keyboardType","textValor","parseFloat","marginRight","value","Button","onPress","newItem","length","AddItemInList","title","Tab","createBottomTabNavigator","Routes","NavigationContainer","Navigator","Screen","options","tabBarIcon","color","size","component","App"],"mappings":"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","file":"static/js/app.22e128de.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View } from 'react-native';\r\n\r\n\r\nconst AllLists: React.FC = () => {\r\n\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Text style={{fontSize: 22, textAlign: 'center', fontWeight:'bold'}}> Em construção</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AllLists;","import React, { useEffect, useState } from 'react';\r\nimport { View, FlatList, Image, Text, StyleSheet, TextInput, ScrollView, StatusBar, Button } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nimport Item from '../components/Item-component'\r\n\r\ninterface ListItems { \r\n  id: string,\r\n  name: string;\r\n  quatity: number;\r\n  valor: number,\r\n  subtotal: number;\r\n}\r\n\r\nconst Main: React.FC = () => {\r\n\r\n  const [items, setItems] = useState<ListItems[]>([]);\r\n  const [ nameItem, setNameItem] = useState<string>('');\r\n  const [ total, setTotal] = useState<number>(0);\r\n  const [ quantityItem , setQuantityItem] = useState<number>(0);\r\n  const [ subtotalItem , setSubtotalItem] = useState<number>(0);\r\n  const [ valorItem , setValorItem] = useState<number>(0);\r\n\r\n  /**\r\n   * Adiciona um novo item na lista\r\n   */\r\n  const AddItemInList = () => {\r\n    \r\n    let newItem: ListItems = {\r\n      id: (items.length + 1).toString(),\r\n      name: nameItem,\r\n      quatity: (1),\r\n      valor: (0),\r\n      subtotal: (0),\r\n    }\r\n\r\n    setItems([...items, newItem]);\r\n    \r\n    let totalItems = items.reduce((a, b) => a + b.subtotal, 0)\r\n    totalItems += newItem.subtotal;\r\n   \r\n    setTotal(totalItems);\r\n    setNameItem('');\r\n\r\n\r\n  };\r\n\r\n  /**\r\n   * Atualiza valor do item da lista\r\n   * @param key \r\n   * @param quantityItem \r\n   * @param valueItem \r\n   */\r\n  const UpdateValueItem = (key: string, quantityItem: number, valueItem: number) => {\r\n    let _total = quantityItem * valueItem;\r\n    \r\n    let _item = items.find(index => index.id === key);\r\n    let _indexItem = items.findIndex(index => index.id == key);\r\n\r\n    if(_item){\r\n      items[_indexItem].quatity = quantityItem;\r\n      items[_indexItem].valor = valueItem;\r\n      items[_indexItem].subtotal = _total;\r\n\r\n    }\r\n\r\n    items.forEach(item => {console.log(item.name, item.subtotal)});\r\n    let totalItems = items.reduce((a, b) => a + b.subtotal, 0);\r\n    console.log(totalItems);\r\n  \r\n    _total = totalItems + _total;\r\n    \r\n\r\n    setTotal(totalItems);\r\n  }\r\n\r\n  \r\n\r\n    return (\r\n    <SafeAreaView style={styles.container}>\r\n          <View style={styles.viewHeaderListItens}>\r\n            \r\n          <Text style={[styles.headerList, {textAlign: 'left'}]}> Nome </Text>\r\n          <Text style={styles.headerList}> Quatidade </Text>\r\n          <Text style={styles.headerList}> Valor </Text>\r\n          \r\n          </View>\r\n\r\n          <FlatList contentContainerStyle={{padding: 10}}\r\n            data={items} \r\n            keyExtractor={ item => item.id }\r\n            extraData={items}\r\n            renderItem={({item}) => (\r\n              <View style={styles.viewListItens}>\r\n                \r\n                <Text style={styles.textName} >{ item.name } </Text>\r\n                \r\n                <TextInput\r\n\r\n                  style={{ \r\n                    backgroundColor: '#FFF',\r\n                    borderColor:'#CCC',\r\n                    margin: 20,\r\n                    padding: 10,\r\n                    borderWidth:3,\r\n                    borderRadius: 8,\r\n                    height: 40,\r\n                    width: 58,\r\n                    textAlign: 'center',\r\n                    fontSize: 18,\r\n                    alignItems: 'center'\r\n                  }}\r\n\r\n\r\n                  defaultValue={item.quatity.toString()}\r\n                  onChangeText={(text) => {\r\n\r\n                    if(Number.parseInt(text) > 0){\r\n                      setQuantityItem(Number.parseInt(text));\r\n                      UpdateValueItem(item.id, Number.parseInt(text), item.valor );\r\n                    }\r\n                  }}\r\n                  keyboardType='numeric' \r\n                />\r\n\r\n                 <TextInput\r\n\r\n                  style={{ \r\n                    backgroundColor: '#FFF',\r\n                    borderColor:'#CCC',\r\n                    margin: 20,\r\n                    padding: 10,\r\n                    borderWidth:3,\r\n                    borderRadius: 8,\r\n                    height: 40,\r\n                    width: 70,\r\n                    textAlign: 'center',\r\n                    fontSize: 18,\r\n                    \r\n                  }}\r\n\r\n                  defaultValue={item.valor.toString()}\r\n                  onChangeText={(textValor) => {\r\n\r\n                    if(Number.parseInt(textValor) >= 0){\r\n                      setValorItem(Number.parseInt(textValor));\r\n                      UpdateValueItem(item.id, item.quatity, Number.parseFloat(textValor));\r\n                    }\r\n                  }}\r\n                  keyboardType='numbers-and-punctuation' \r\n                />  \r\n\r\n                \r\n              </View>\r\n            \r\n            )}\r\n          /> \r\n      \r\n\r\n        <View style={styles.viewTotalItems}>\r\n          <Text style={[styles.textTotal, {marginRight: 120}]} >TOTAL</Text>   \r\n          <Text style={[styles.textTotal, {fontSize: 28}]} >{ total }</Text>   \r\n        </View>\r\n        <View style={styles.viewAddItem}> \r\n          <TextInput \r\n            style={styles.inputAddItem}\r\n            defaultValue={nameItem}\r\n            value={nameItem}  \r\n            onChangeText={text => setNameItem(text)} \r\n          />    \r\n          <Button onPress={() => {AddItemInList()}} title='ADD'/>\r\n        </View>\r\n    </SafeAreaView>\r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: StatusBar.currentHeight || 0, \r\n    marginHorizontal: 5\r\n  },\r\n\r\n  scrolview: {\r\n    // marginHorizontal: 5,\r\n  },\r\n\r\n  viewListItens: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignContent:'space-between',\r\n    alignItems: 'center',\r\n  },\r\n \r\n  text: {\r\n    // fontFamily: 'Roboto',\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    // marginRight: 25,\r\n    flex: 1\r\n  },\r\n\r\n  textName: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    // marginRight: 25,\r\n    flex: 1,\r\n    // width: 100,\r\n  },\r\n\r\n  textTotal: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    flex: 1\r\n  },\r\n\r\n  viewAddItem: {\r\n    // flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignContent:'space-between',\r\n    \r\n  },\r\n\r\n  viewTotalItems: {\r\n    // flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignContent:'space-between',\r\n    \r\n  },\r\n\r\n  inputAddItem: {\r\n    backgroundColor: '#FFF',\r\n    borderColor:'#CCC',\r\n    margin: 20,\r\n    padding: 10,\r\n    borderWidth:3,\r\n    borderRadius: 8,\r\n    height: 40,\r\n    flex: 1\r\n  \r\n  },\r\n\r\n  \r\n  inputsItems: {\r\n    backgroundColor: '#FFF',\r\n    borderColor:'#CCC',\r\n    margin: 20,\r\n    padding: 10,\r\n    borderWidth:3,\r\n    borderRadius: 8,\r\n    height: 40,\r\n    flex: 1\r\n  \r\n  },\r\n\r\n  headerList: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 5,\r\n    flex: 1\r\n    \r\n    \r\n  },\r\n\r\n  viewHeaderListItens: {\r\n    backgroundColor: '#CCC',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 0,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignContent:'space-between',\r\n    \r\n  },\r\n\r\n \r\n});\r\n\r\nexport default Main;  ","import React from \"react\";\r\nimport { Feather, MaterialCommunityIcons as MaterialIcon } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\nimport AllLists from \"./pages/AllLists\";\r\nimport Main from \"./pages/Main\";\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator>\r\n        <Tab.Screen \r\n          options={{ tabBarIcon: ({ color }) => <MaterialIcon name=\"clipboard-list\" size={20} color={color}/> }}\r\n          name=\"Listas\"\r\n          component={Main} \r\n        />\r\n        <Tab.Screen \r\n          options={{ tabBarIcon: ({ color }) => <MaterialIcon name=\"playlist-edit\" size={20} color={color}/> }}\r\n          name=\"Todas as Listas\" \r\n          component={AllLists} \r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}","import React from 'react';\nimport Routes from './src/routes';\n\nexport default function App() {\n  return (\n    <Routes />\n  );\n}\n\n"],"sourceRoot":""}